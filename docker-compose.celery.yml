version: '3.8'

services:
  # Redis - Celery Broker v√† Result Backend
  redis:
    image: redis:7-alpine
    container_name: planbook_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - planbook_network

  # Celery Worker - PDF Processing
  celery_worker_pdf:
    build: .
    container_name: planbook_celery_pdf
    command: celery -A app.core.celery_app:celery_app worker --loglevel=info --queues=pdf_queue --concurrency=2 --pool=prefork
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MONGODB_URL=mongodb://mongodb:27017/planbook_db
    depends_on:
      - redis
      - mongodb
    networks:
      - planbook_network
    restart: unless-stopped

  # Celery Worker - Embeddings Processing  
  celery_worker_embeddings:
    build: .
    container_name: planbook_celery_embeddings
    command: celery -A app.core.celery_app:celery_app worker --loglevel=info --queues=embeddings_queue --concurrency=1 --pool=prefork
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MONGODB_URL=mongodb://localhost:27017/planbook_db
    depends_on:
      - redis
      - mongodb
    networks:
      - planbook_network
    restart: unless-stopped

  # Celery Worker - CV Processing
  celery_worker_cv:
    build: .
    container_name: planbook_celery_cv
    command: celery -A app.core.celery_app:celery_app worker --loglevel=info --queues=cv_queue --concurrency=1 --pool=prefork
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MONGODB_URL=mongodb://localhost:27017/planbook_db
    depends_on:
      - redis
      - mongodb
    networks:
      - planbook_network
    restart: unless-stopped

  # Celery Flower - Monitoring (Optional)
  celery_flower:
    build: .
    container_name: planbook_flower
    command: celery -A app.core.celery_app:celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - planbook_network
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: planbook_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - planbook_network
    restart: unless-stopped

  # FastAPI Application
  fastapi_app:
    build: .
    container_name: planbook_fastapi
    command: fastapi dev app/main.py --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MONGODB_URL=mongodb://mongodb:27017/planbook_db
    depends_on:
      - redis
      - mongodb
    networks:
      - planbook_network
    restart: unless-stopped

volumes:
  redis_data:
  mongodb_data:

networks:
  planbook_network:
    driver: bridge
