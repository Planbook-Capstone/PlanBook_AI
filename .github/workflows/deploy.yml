name: Deploy PlanBook AI to VPS

on:
  push:
    branches:
      - master
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          command_timeout: 60m
          script: |
            echo "📂 Moving to project folder"
            cd PlanBook_AI || exit 1

            echo "📊 Checking disk space before deployment..."
            df -h

            echo "🧹 Cleaning up Docker to free space..."
            docker system prune -f --volumes || true
            docker builder prune -f || true
            docker image prune -a -f || true

            echo "📊 Disk space after cleanup:"
            df -h

            echo "📥 Pulling latest code"
            git reset --hard
            git pull origin master || git pull origin main

            echo "🏗️ Building new Docker images with optimized settings..."
            if ! docker compose -f docker-compose.yml build --no-cache --parallel; then
              echo "❌ Build failed. Keeping current containers running."
              exit 1
            fi

            echo "✅ Build successful. Stopping old containers..."
            docker compose -f docker-compose.yml down

            echo "🚀 Starting new containers..."
            docker compose -f docker-compose.yml up -d

            echo "⏳ Waiting for services to initialize..."
            sleep 60

            echo "🔍 Checking container status..."
            docker compose -f docker-compose.yml ps

            echo "📋 Checking container logs..."
            docker compose -f docker-compose.yml logs --tail=20 planbook-ai

            for i in {1..20}; do
              echo "⏳ Health check attempt $i/20..."
              if curl -fs http://localhost:8000/health; then
                echo "✅ Deployment successful!"
                echo "🧹 Final cleanup..."
                docker image prune -f
                docker container prune -f
                echo "📊 Final disk usage:"
                df -h
                exit 0
              fi
              echo "⏳ Waiting... ($i/20)"
              sleep 6
            done

            echo "❌ Health check failed. Rolling back..."
            docker compose -f docker-compose.yml down
            echo "🧹 Cleanup after failed deployment..."
            docker system prune -f
            exit 1
